variables:
  DISCORD_WEBHOOK: 'https://discord.com/api/webhooks/1116567519004733540/4x9K_xxPeb2SvXW7aOs4lPQuBTsMh_0hVprgU374CcAIgiTu0LbBnZYTWT7ZGSo6h1fk'
  IMAGE_NAME: pinex
  DOCKER_REGISTRY: 590774876296.dkr.ecr.ap-southeast-1.amazonaws.com
  AWS_DEFAULT_REGION: ap-southeast-1
  APP_NAME: pinex
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ''
  IMAGE_TAG: latest # use latest for demo

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: always
    - when: never

stages:
  - test-lint
  - build
  - deploy
  - notification

lint-test-job: # This job also runs in the test stage.
  stage: test-lint # It can run at the same time as unit-test-job (in parallel).
  image: node:18
  script:
    - yarn
    - yarn lint
  cache:
    paths:
      - node_modules

publish-job:
  stage: build
  image:
    name: docker:latest
  services:
    - docker:19-dind
  before_script:
    - apk add --no-cache curl jq python3 py3-pip
    - pip install awscli
    - aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    - aws --version
    - docker info
    - docker --version
  script:
    - ls
    - docker build -t pinex .
    - docker images
    - docker tag pinex@latest $DOCKER_REGISTRY/$APP_NAME:$IMAGE_TAG
    - docker push $DOCKER_REGISTRY/$APP_NAME:$IMAGE_TAG

success_notification:
  stage: notification
  script:
    - chmod +x ./discordhook.sh;
    - ./discordhook.sh success $DISCORD_WEBHOOK
  when: on_success

failure_notification:
  stage: notification
  script:
    - chmod +x ./discordhook.sh
    - ./discordhook.sh failure $DISCORD_WEBHOOK
  when: on_failure
